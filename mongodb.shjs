# Secure version of mongo docker container
## https://hub.docker.com/r/khezen/mongo/
sudo docker pull khezen/mongo
sudo docker run -d -p 27017:27017 -e ADMIN_USER=root -e ADMIN_PWD=secret-password -e AUTH=y --name dnavid khezen/mongo:latest
sudo docker run -it --link dnavid:mongo --rm mongo sh -c 'exec mongo -u root -p root-secret-password  "$MONGO_PORT_27017_TCP_ADDR:$MONGO_PORT_27017_TCP_PORT/admin"'

## Connect remotely
mongodb://root:root-secret-password@104.198.119.146:27017/admin
## Cleanup
## sudo docker stop dnavid; sudo docker rm dnavid

// Create users database
use users
// Create api user, behind authentication and authorization to read and write from user database
db.createUser(
{
        user: "api",
        pwd: "api-secret-password",
        roles: [ 
        { role: "readWrite", db: "users" } ,
        { role: "readWrite", db: "public" }         
        ]
}
)

// Connect remotely
mongodb://api:api-secret-password@104.198.119.146:27017/users
// From server
sudo docker run -it --link dnavid:mongo --rm mongo sh -c 'exec mongo -u api -p api-secret-password  "$MONGO_PORT_27017_TCP_ADDR:$MONGO_PORT_27017_TCP_PORT/users"'


// Create public user, reading information made public by users on public database
use public
db.createUser(
{
        user: "public",
        pwd: "xwxhJDvMzNiTjJtcgWDtKwuosKRtEak",
        roles: [ { role: "read", db: "public" } ]
}
)
## Connect remotely
mongodb://public:xwxhJDvMzNiTjJtcgWDtKwuosKRtEak@104.198.119.146:27017/public
// From server
sudo docker run -it --link dnavid:mongo --rm mongo sh -c 'exec mongo -u public -p xwxhJDvMzNiTjJtcgWDtKwuosKRtEak "$MONGO_PORT_27017_TCP_ADDR:$MONGO_PORT_27017_TCP_PORT/public"'

## Publish a profile 
## Command doesn't work. Because same server??

db.runCommand( { cloneCollection: "users.users",
from: "localhost:27017/users",
 query: { _id: "MCXHIAMD" }
}
)
## query DNA from user lalaland
db.users.findOne({"_id":"lalaland"},{DNA:1})
